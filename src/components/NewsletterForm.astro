---
import isValidEmail from "@/utils/validateEmail";
import mailchimp from '@mailchimp/mailchimp_marketing';


const errors = { email: "" };
if (Astro.request.method === "POST") {
    const data = await Astro.request.formData();
    const email = data.get("email");

    if (typeof email !== "string" || !isValidEmail(email)) {
      errors.email = "Email is not valid. ";
    }
    const hasErrors = Object.values(errors).some((msg) => msg);

    if (!hasErrors) {
      mailchimp.setConfig({
        apiKey: import.meta.env.MAILCHIMP_API_KEY,
        server: "us10",
      });

      const run = async () => {
        await mailchimp.lists.batchListMembers("816e41a839", {
          members: [
            {
              "email_address": email,
              "status": "subscribed",
            },
          ],
        });
      };

      run();
    }
  
}
---



<form method="POST" class="flex flex-col gap-4">
  <label class="group flex max-w-sm cursor-pointer flex-col gap-2">
    <p class="pb-2">Email</p>
    <input type="email" name="email" required class="rounded-md border border-neutral-700 p-4 text-black"/>
  </label>
  {errors.email && <p>{errors.email}</p>}
  <button class="group flex max-w-sm cursor-pointer flex-col gap-2 rounded-md border border-neutral-700 p-4 hover:bg-violet-600 active:bg-violet-700 text-white">Subscribe</button>
</form>
